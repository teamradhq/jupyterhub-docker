version: '3'
services:

  reverse-proxy:
    image: traefik:latest
    command:
      - --providers.docker
      - --api.insecure=true
      - --entryPoints.http.address=:80
      - --entryPoints.https.address=:443
    labels:
      - traefik.http.routers.admin.rule=Host(`traefik.docker.localhost`)
      - traefik.http.services.admin.loadbalancer.server.port=8080
    ports:
      - "${PROXY_PORT:-80}:80"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - hub_network
    restart: on-failure

  jupyterhub:
    container_name: hub
    build:
      context: hub
      dockerfile: Dockerfile
    environment:
        HUB_ADMIN_USER: "${HUB_ADMIN_USER:-admin}"
        HUB_JUPYTER_IMAGE: lab
        HUB_NETWORK_NAME: "hub_network"
        HUB_IP: hub
        HOST: "${HUB_HOST:-hub.docker.localhost}"
        HUB_HOST_DIR: "${HUB_HOST_DIR}"
    labels:
      - traefik.http.routers.hub.rule=Host(`${HUB_HOST:-hub.docker.localhost}`)
      - traefik.http.services.hub.loadbalancer.server.port=8000
      - traefik.http.routers.hub.entrypoints=http,https
    depends_on:
      - reverse-proxy
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - hub_network
    restart: on-failure

  jupyterlab:
    build: lab
    image: lab
    container_name: lab
    environment:
      JUPYTER_ENABLE_LAB: "${LAB_ENABLE:-yes}"
      JUPYTER_TOKEN: "${LAB_TOKEN:-docker}"
    labels:
      - traefik.http.routers.jupyter.rule=Host(`${LAB_HOST:-lab.docker.localhost}`)
      - traefik.http.services.jupyter.loadbalancer.server.port=8888
      - traefik.http.routers.jupyter.entrypoints=http,https
    depends_on:
      - reverse-proxy
    networks:
      - hub_network
    command:
      - echo

networks:
  hub_network:
    external: true
